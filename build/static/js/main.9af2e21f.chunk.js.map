{"version":3,"sources":["components/Filter.js","components/NewEntry.js","components/DisplayEntry.js","components/Feedback.js","services/contacts.js","App.js","index.js"],"names":["Filter","filterEntry","handleFilterEntry","value","onChange","NewEntry","props","onSubmit","handleSubmit","name","handleNameEntry","required","number","handlePhoneEntry","type","DisplayEntry","entries","handleDelete","filteredEntries","filter","entry","toLowerCase","includes","length","map","id","_id","onClick","Feedback","feedback","feedbackClass","className","baseUrl","contacts","getAll","axios","get","then","response","data","createEntry","newObject","post","deleteEntry","delete","updateEntry","put","App","useState","persons","setPersons","setNewName","setNumber","setFilterEntry","setFeedback","useEffect","contactService","event","target","preventDefault","find","element","window","confirm","person","catch","error","errorText","setTimeout","contact","previousSibling","wholeText","status","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9af2e21f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({ filterEntry, handleFilterEntry }) => {\r\n  return (\r\n    <form>\r\n      <fieldset>\r\n        <legend>Filter</legend>\r\n        <label>\r\n          by name: <input value={filterEntry} onChange={handleFilterEntry} />\r\n        </label>\r\n      </fieldset>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst NewEntry = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <fieldset>\r\n        <legend>Add a new</legend>\r\n        <label>\r\n          name:{\" \"}\r\n          <input value={props.name} onChange={props.handleNameEntry} required />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          number:{\" \"}\r\n          <input\r\n            value={props.number}\r\n            onChange={props.handlePhoneEntry}\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">add</button>\r\n      </fieldset>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewEntry;\r\n","import React from \"react\";\r\n\r\nconst DisplayEntry = ({ entries, filterEntry, handleDelete }) => {\r\n  const filteredEntries = filterEntry\r\n    ? entries.filter((entry) =>\r\n        entry.name.toLowerCase().includes(filterEntry.toLowerCase())\r\n      )\r\n    : entries;\r\n  return (\r\n    <div>\r\n      <h2>Numbers</h2>\r\n      <ul>\r\n        {filteredEntries.length > 0 ? (\r\n          filteredEntries.map((entry) => (\r\n            <li key={entry._id}>\r\n              {entry.name} {entry.number}{\" \"}\r\n              <button id={entry._id} onClick={handleDelete}>\r\n                delete\r\n              </button>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <li>No entries to display</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayEntry;\r\n","import React from \"react\";\r\n\r\nconst Feedback = ({ feedback }) => {\r\n  if (feedback) {\r\n    const feedbackClass =\r\n      feedback.includes(\"removed from server\") ||\r\n      feedback.includes(\"failed\")\r\n        ? \"feedback failure\"\r\n        : \"feedback success\";\r\n    return <div className={feedbackClass}>{feedback}</div>;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default Feedback;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then((response) => response.data);\r\n};\r\n\r\nconst createEntry = (newObject) => {\r\n  return axios.post(baseUrl, newObject).then((response) => response.data);\r\n};\r\n\r\nconst deleteEntry = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nconst updateEntry = (id, newObject) => {\r\n  return axios\r\n    .put(`${baseUrl}/${id}`, newObject)\r\n    .then((response) => response.data);\r\n};\r\n\r\nconst contacts = {\r\n  getAll,\r\n  createEntry,\r\n  deleteEntry,\r\n  updateEntry,\r\n};\r\n\r\nexport default contacts;\r\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport NewEntry from \"./components/NewEntry\";\nimport DisplayEntry from \"./components/DisplayEntry\";\nimport Feedback from \"./components/Feedback\";\nimport contactService from \"./services/contacts\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [name, setNewName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [filterEntry, setFilterEntry] = useState(\"\");\n  const [feedback, setFeedback] = useState();\n\n  useEffect(() => {\n    contactService.getAll().then((data) => setPersons(data));\n  }, []);\n\n  const handleNameEntry = (event) => setNewName(event.target.value);\n  const handlePhoneEntry = (event) => setNumber(event.target.value);\n  const handleFilterEntry = (event) => setFilterEntry(event.target.value);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (persons.find((element) => element.name === name)) {\n      const confirmed = window.confirm(`${name} is already added to phonebook.\nReplace the old number with a new one?`);\n      if (confirmed) {\n        const id = persons.find((person) => person.name === name)._id;\n        contactService\n          .updateEntry(id, { name, number })\n          .then((data) => {\n            setPersons([\n              ...persons.filter((person) => person._id !== id),\n              data,\n            ]);\n            setFeedback(`Updated ${name}`);\n            setNewName(\"\");\n            setNumber(\"\");\n          })\n          .catch((error) => {\n            const errorText = error.response.data.error;\n            if (errorText) {\n              setFeedback(errorText);\n            } else {\n              setFeedback(\n                `${name} has already been removed from server. Please refresh the page.`\n              );\n            }\n          });\n      }\n    } else {\n      contactService\n        .createEntry({ name, number })\n        .then((data) => {\n          setPersons([...persons, data]);\n          setFeedback(`Added ${name}`);\n          setNewName(\"\");\n          setNumber(\"\");\n        })\n        .catch((error) => {\n          const errorText = error.response.data.error;\n          if (errorText) {\n            setFeedback(errorText);\n          }\n        });\n    }\n    setTimeout(() => setFeedback(null), 5000);\n  };\n\n  const handleDelete = (event) => {\n    const id = event.target.id;\n    const contact = event.target.previousSibling.wholeText;\n    const confirmed = window.confirm(\n      `Do you want to remove this entry?\\n${contact}`\n    );\n    if (confirmed) {\n      contactService.deleteEntry(id).then((response) => {\n        if (response.status === 204) {\n          setPersons(persons.filter((person) => person._id !== id));\n          setFeedback(`Deleted ${contact}`);\n          setTimeout(() => setFeedback(null), 5000);\n        } else {\n          alert(`Server cannot remove entry with ID ${id}`);\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Feedback feedback={feedback} />\n      <Filter filterEntry={filterEntry} handleFilterEntry={handleFilterEntry} />\n      <NewEntry\n        name={name}\n        handleNameEntry={handleNameEntry}\n        number={number}\n        handlePhoneEntry={handlePhoneEntry}\n        handleSubmit={handleSubmit}\n      />\n      <DisplayEntry\n        entries={persons}\n        filterEntry={filterEntry}\n        handleDelete={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}